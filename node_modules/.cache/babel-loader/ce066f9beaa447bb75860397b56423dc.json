{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectGitHub\\\\project-learning-ReactJS\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { auth, firebase } from './services/firebase';\nimport { Home } from \"./pages/Home\";\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Google Accout');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n  }, []);\n\n  async function singInWithGoogle() {\n    const provinder = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provinder);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Accout');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        singInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/projectGitHub/project-learning-ReactJS/src/App.tsx"],"names":["createContext","useState","useEffect","BrowserRouter","Route","auth","firebase","Home","NewRoom","AuthContext","App","user","setUser","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","singInWithGoogle","provinder","GoogleAuthProvider","result","signInWithPopup"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAaA,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASU,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,IAAI,CAACQ,kBAAL,CAAwBF,IAAI,IAAI;AAC9B,UAAGA,IAAH,EAAQ;AACN,cAAM;AAAEG,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAiCL,IAAvC;;AAEA,YAAI,CAACG,WAAD,IAAgB,CAACC,QAArB,EAA8B;AAC5B,gBAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACDL,QAAAA,OAAO,CAAC;AACRM,UAAAA,EAAE,EAAEF,GADI;AAERG,UAAAA,IAAI,EAAEL,WAFE;AAGRM,UAAAA,MAAM,EAAEL;AAHA,SAAD,CAAP;AAKD;AACF,KAbD;AAcD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,iBAAeM,gBAAf,GAAiC;AAC/B,UAAMC,SAAS,GAAG,IAAIhB,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EAAlB;AACA,UAAMC,MAAM,GAAG,MAAMnB,IAAI,CAACoB,eAAL,CAAqBH,SAArB,CAArB;;AAGE,QAAGE,MAAM,CAACb,IAAV,EAAe;AACb,YAAM;AAAEG,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAiCQ,MAAM,CAACb,IAA9C;;AAEA,UAAI,CAACG,WAAD,IAAgB,CAACC,QAArB,EAA8B;AAC5B,cAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACDL,MAAAA,OAAO,CAAC;AACRM,QAAAA,EAAE,EAAEF,GADI;AAERG,QAAAA,IAAI,EAAEL,WAFE;AAGRM,QAAAA,MAAM,EAAEL;AAHA,OAAD,CAAP;AAKD;AACJ;;AAED,sBACE,QAAC,aAAD;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACJ,QAAAA,IAAD;AAAOU,QAAAA;AAAP,OAA7B;AAAA,8BACA,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,KAAK,MAAtB;AAAuB,QAAA,SAAS,EAAEd;AAAlC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA/CQE,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { auth, firebase } from './services/firebase';\nimport {Home} from \"./pages/Home\";\nimport { NewRoom } from \"./pages/NewRoom\";\n\ntype User = {\n  id: string;\n  name: string;\n  avatar: string\n}\n\ntype AuthContextType = {\n  user: User | undefined;\n  singInWithGoogle: () => Promise<void>;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nfunction App() {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if(user){\n        const { displayName, photoURL, uid } = user\n\n        if (!displayName || !photoURL){\n          throw new Error('Missing information from Google Accout')\n        }\n        setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n        })\n      }\n    })\n  }, [])\n\n  async function singInWithGoogle(){\n    const provinder = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provinder)\n\n        \n      if(result.user){\n        const { displayName, photoURL, uid } = result.user\n\n        if (!displayName || !photoURL){\n          throw new Error('Missing information from Google Accout')\n        }\n        setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n        })\n      }\n  }\n\n  return(\n    <BrowserRouter>\n    <AuthContext.Provider value={{user, singInWithGoogle}}>\n    <Route  path=\"/\" exact component={Home}/>\n    <Route  path=\"/rooms/new\" component={NewRoom}/>\n    </AuthContext.Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}