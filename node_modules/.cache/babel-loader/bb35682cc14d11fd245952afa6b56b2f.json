{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectGitHub\\\\project-learning-ReactJS\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { auth, firebase } from './services/firebase';\nimport { Home } from \"./pages/Home\";\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Google Accout');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  async function singInWithGoogle() {\n    const provinder = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provinder);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Accout');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/rooms/new\",\n      component: NewRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/projectGitHub/project-learning-ReactJS/src/App.tsx"],"names":["useState","useEffect","BrowserRouter","Route","auth","firebase","Home","NewRoom","App","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","singInWithGoogle","provinder","GoogleAuthProvider","result","signInWithPopup"],"mappings":";;;AAAA,SAAwBA,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAGP,IAAI,CAACQ,kBAAL,CAAwBH,IAAI,IAAI;AAClD,UAAGA,IAAH,EAAQ;AACN,cAAM;AAAEI,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAiCN,IAAvC;;AAEA,YAAI,CAACI,WAAD,IAAgB,CAACC,QAArB,EAA8B;AAC5B,gBAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACDN,QAAAA,OAAO,CAAC;AACRO,UAAAA,EAAE,EAAEF,GADI;AAERG,UAAAA,IAAI,EAAEL,WAFE;AAGRM,UAAAA,MAAM,EAAEL;AAHA,SAAD,CAAP;AAKD;AACF,KAbmB,CAApB;AAeA,WAAO,MAAK;AACVH,MAAAA,WAAW;AACZ,KAFD;AAID,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,iBAAeS,gBAAf,GAAiC;AAC/B,UAAMC,SAAS,GAAG,IAAIhB,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EAAlB;AACA,UAAMC,MAAM,GAAG,MAAMnB,IAAI,CAACoB,eAAL,CAAqBH,SAArB,CAArB;;AAGE,QAAGE,MAAM,CAACd,IAAV,EAAe;AACb,YAAM;AAAEI,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAiCQ,MAAM,CAACd,IAA9C;;AAEA,UAAI,CAACI,WAAD,IAAgB,CAACC,QAArB,EAA8B;AAC5B,cAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACDN,MAAAA,OAAO,CAAC;AACRO,QAAAA,EAAE,EAAEF,GADI;AAERG,QAAAA,IAAI,EAAEL,WAFE;AAGRM,QAAAA,MAAM,EAAEL;AAHA,OAAD,CAAP;AAKD;AACJ;;AAED,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAiB,MAAA,KAAK,MAAtB;AAAuB,MAAA,SAAS,EAAER;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlDQC,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { auth, firebase } from './services/firebase';\nimport {Home} from \"./pages/Home\";\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { AuthContextProvinder } from \"./context/AuthContext\";\n\n\n\n\n\nfunction App() {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if(user){\n        const { displayName, photoURL, uid } = user\n\n        if (!displayName || !photoURL){\n          throw new Error('Missing information from Google Accout')\n        }\n        setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n        })\n      }\n    })\n\n    return () =>{\n      unsubscribe();\n    }\n\n  }, [])\n\n  async function singInWithGoogle(){\n    const provinder = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provinder)\n\n        \n      if(result.user){\n        const { displayName, photoURL, uid } = result.user\n\n        if (!displayName || !photoURL){\n          throw new Error('Missing information from Google Accout')\n        }\n        setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n        })\n      }\n  }\n\n  return(\n    <BrowserRouter>\n      <Route  path=\"/\" exact component={Home}/>\n      <Route  path=\"/rooms/new\" component={NewRoom}/>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}