[{"D:\\projectGitHub\\project-learning-ReactJS\\src\\index.tsx":"1","D:\\projectGitHub\\project-learning-ReactJS\\src\\App.tsx":"2","D:\\projectGitHub\\project-learning-ReactJS\\src\\services\\firebase.ts":"3","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Home.tsx":"4","D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\Button.tsx":"5","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\NewRoom.tsx":"6","D:\\projectGitHub\\project-learning-ReactJS\\src\\contexts\\AuthContext.tsx":"7","D:\\projectGitHub\\project-learning-ReactJS\\src\\hooks\\useAuth.ts":"8","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Room.tsx":"9","D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\RoomCode.tsx":"10","D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\Question.tsx":"11","D:\\projectGitHub\\project-learning-ReactJS\\src\\hooks\\useRoom.ts":"12","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\AdminRoom.tsx":"13"},{"size":268,"mtime":1632330368010,"results":"14","hashOfConfig":"15"},{"size":740,"mtime":1632403787173,"results":"16","hashOfConfig":"15"},{"size":644,"mtime":1632330368012,"results":"17","hashOfConfig":"15"},{"size":2638,"mtime":1632446405229,"results":"18","hashOfConfig":"15"},{"size":372,"mtime":1632405314828,"results":"19","hashOfConfig":"15"},{"size":2164,"mtime":1632354352638,"results":"20","hashOfConfig":"15"},{"size":1688,"mtime":1632330368008,"results":"21","hashOfConfig":"15"},{"size":188,"mtime":1632330368009,"results":"22","hashOfConfig":"15"},{"size":4353,"mtime":1632443604874,"results":"23","hashOfConfig":"15"},{"size":547,"mtime":1632347332036,"results":"24","hashOfConfig":"15"},{"size":690,"mtime":1632406355619,"results":"25","hashOfConfig":"15"},{"size":1846,"mtime":1632443146050,"results":"26","hashOfConfig":"15"},{"size":2330,"mtime":1632446183440,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yz5msm",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projectGitHub\\project-learning-ReactJS\\src\\index.tsx",[],["56","57"],"D:\\projectGitHub\\project-learning-ReactJS\\src\\App.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\services\\firebase.ts",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Home.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\Button.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\NewRoom.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\contexts\\AuthContext.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\hooks\\useAuth.ts",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Room.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\RoomCode.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\Question.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\hooks\\useRoom.ts",["58"],"import { useEffect, useState } from \"react\";\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\ntype QuestionType = {\r\n    id: string;\r\n    author: {\r\n      name: string;\r\n      avatar: string;\r\n    }\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHighlighted: boolean;\r\n    likeCount: number;\r\n    likeId: string | undefined;\r\n}\r\n\r\ntype FirebaseQuestions = Record<string, {\r\n    author: {\r\n      name: string;\r\n      avatar: string;\r\n    }\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHighlighted: boolean;\r\n    likes: Record<string, {\r\n      authorId: string;\r\n    }>\r\n}>\r\n\r\nexport function useRoom(roomId: string){\r\n    const [questions, setQuestions] = useState<QuestionType[]>([])\r\n    const [title, setTitle] = useState('');\r\n    const { user } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const roomRef = database.ref(`rooms/${roomId}`);\r\n    \r\n        roomRef.on('value', room => {\r\n          const databaseRoom = room.val();\r\n          const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\r\n    \r\n          const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\r\n            return {\r\n              id: key,\r\n              content: value.content,\r\n              author: value.author,\r\n              isHighlighted: value.isHighlighted,\r\n              isAnswered: value.isAnswered,\r\n              likeCount: Object.values(value.likes ?? {}).length,\r\n              likeId  : Object.entries(value.likes ?? {}).find(([key, like]) => like.authorId === user?.id)?. [0],\r\n            }\r\n          })\r\n    \r\n          setTitle(databaseRoom.title);\r\n          setQuestions(parsedQuestions);\r\n        })\r\n\r\n        return() =>   {\r\n          roomRef.off('value');\r\n        }\r\n      }, [roomId, user?.id]);\r\n      return{questions, title}\r\n}","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\AdminRoom.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":51,"column":25,"nodeType":"65","messageId":"66","endLine":51,"endColumn":114,"fix":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-whitespace-before-property","Unexpected whitespace before property 0.","MemberExpression","unexpectedWhitespace",{"range":"70","text":"71"},"no-global-assign","no-unsafe-negation",[1572,1575],"?."]