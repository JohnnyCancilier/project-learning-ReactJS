[{"D:\\projectGitHub\\project-learning-ReactJS\\src\\index.tsx":"1","D:\\projectGitHub\\project-learning-ReactJS\\src\\App.tsx":"2","D:\\projectGitHub\\project-learning-ReactJS\\src\\services\\firebase.ts":"3","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Home.tsx":"4","D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\Button.tsx":"5","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\NewRoom.tsx":"6","D:\\projectGitHub\\project-learning-ReactJS\\src\\contexts\\AuthContext.tsx":"7","D:\\projectGitHub\\project-learning-ReactJS\\src\\hooks\\useAuth.ts":"8","D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Room.tsx":"9"},{"size":268,"mtime":1632330368010,"results":"10","hashOfConfig":"11"},{"size":623,"mtime":1632334625889,"results":"12","hashOfConfig":"11"},{"size":644,"mtime":1632330368012,"results":"13","hashOfConfig":"11"},{"size":2517,"mtime":1632338460256,"results":"14","hashOfConfig":"11"},{"size":260,"mtime":1632330368007,"results":"15","hashOfConfig":"11"},{"size":2163,"mtime":1632338438629,"results":"16","hashOfConfig":"11"},{"size":1688,"mtime":1632330368008,"results":"17","hashOfConfig":"11"},{"size":188,"mtime":1632330368009,"results":"18","hashOfConfig":"11"},{"size":1054,"mtime":1632341213494,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"yz5msm",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projectGitHub\\project-learning-ReactJS\\src\\index.tsx",[],["41","42"],"D:\\projectGitHub\\project-learning-ReactJS\\src\\App.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\services\\firebase.ts",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Home.tsx",["43"],"import '../styles/auth.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { Button } from '../componentes/Button';\r\nimport { FormEvent, useState } from 'react';\r\nimport { database } from '../services/firebase';\r\nimport illustrationImg from '../assets/imagens/illustration.svg';\r\nimport logoImg from '../assets/imagens/logo.svg';\r\nimport googleIconImg from '../assets/imagens/google-icon.svg';\r\n\r\nexport function Home(){\r\n    const history = useHistory();\r\n    const { user, singInWithGoogle } = useAuth();\r\n    const [roomCode, setRoomCode] = useState('');\r\n\r\n    async function handleCreateRoom(){\r\n        if(!user){\r\n            await singInWithGoogle()\r\n        }\r\n        history.push('rooms/new')\r\n    }\r\n\r\n    async function handleJoinRoom(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        if(roomCode.trim() == ''){\r\n            return\r\n        }\r\n\r\n        const roomRef = await database.ref(`rooms/${roomCode}`).get();\r\n\r\n        if(!roomRef.exists()){\r\n            alert('This room doesnt exist.');\r\n            return\r\n        }\r\n\r\n        history.push(`/rooms/${roomCode}`);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"page-auth\">\r\n            <aside>\r\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e resposatas\" />\r\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n                <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n            </aside>\r\n            <main>\r\n                <div className=\"main-content\">\r\n                    <img src={logoImg} alt=\"Logo Letmeask\" />\r\n                    <button onClick={handleCreateRoom} className=\"create-room\">\r\n                        <img src={googleIconImg} alt=\"Logo do Google\" />\r\n                        Crie sua sala com o Google\r\n                    </button>\r\n                    <div className=\"separator\">Ou entre em uma sala</div>\r\n                    <form onSubmit={handleJoinRoom}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Digite o código da sala\"\r\n                            onChange={event => setRoomCode(event.target.value)}\r\n                            value={roomCode}\r\n                        />\r\n                        <Button type=\"submit\">\r\n                            Entrar na sala\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}","D:\\projectGitHub\\project-learning-ReactJS\\src\\componentes\\Button.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\NewRoom.tsx",["44"],"import '../styles/auth.scss';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { FormEvent, useState } from 'react'\r\nimport { database } from '../services/firebase'\r\nimport { Button } from '../componentes/Button';\r\nimport illustrationImg from '../assets/imagens/illustration.svg';\r\nimport logoImg from '../assets/imagens/logo.svg';   \r\n\r\nexport function NewRoom(){\r\n    const { user } = useAuth();\r\n    const history = useHistory();\r\n    const [newRoom, setNewRoom] = useState('');\r\n\r\n    async function handleCreateRoom(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        if(newRoom.trim() == ''){\r\n            return\r\n        }\r\n        \r\n        const roomRef = database.ref('rooms');\r\n\r\n        const firebaseRoom = await roomRef.push({\r\n            title: newRoom,\r\n            authorId: user?.id,\r\n        })\r\n\r\n        history.push(`/rooms/${firebaseRoom.key}`);\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-auth\">\r\n            <aside>\r\n                <img src={illustrationImg} alt=\"Ilustração simbolizando perguntas e resposatas\" />\r\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n                <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n            </aside>\r\n            <main>\r\n                <div className=\"main-content\">\r\n                    <img src={logoImg} alt=\"Logo Letmeask\" />\r\n                    <h2>Criar uma nova sala</h2>\r\n                    <form onSubmit={handleCreateRoom}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Nome da sala\"\r\n                            onChange ={event => setNewRoom(event.target.value)}\r\n                            value={newRoom}\r\n                        />\r\n                        <Button type=\"submit\">  \r\n                            Criar sala\r\n                        </Button>\r\n                    </form>\r\n                    <p>\r\n                        Quer entrar em uma sala existente? <Link to=\"/\">Clique aqui</Link>\r\n                    </p>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}","D:\\projectGitHub\\project-learning-ReactJS\\src\\contexts\\AuthContext.tsx",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\hooks\\useAuth.ts",[],"D:\\projectGitHub\\project-learning-ReactJS\\src\\pages\\Room.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":26,"column":28,"nodeType":"51","messageId":"52","endLine":26,"endColumn":30},{"ruleId":"49","severity":1,"message":"50","line":18,"column":27,"nodeType":"51","messageId":"52","endLine":18,"endColumn":29},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]